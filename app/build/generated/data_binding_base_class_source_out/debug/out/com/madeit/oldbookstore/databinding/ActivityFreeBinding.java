// Generated by view binder compiler. Do not edit!
package com.madeit.oldbookstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.madeit.oldbookstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFreeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout backFree;

  @NonNull
  public final EditText edtBookTitleFree;

  @NonNull
  public final EditText edtDescriptionFree;

  @NonNull
  public final Spinner edtLocationFree;

  @NonNull
  public final LinearLayout frontFree;

  @NonNull
  public final ImageView imageBackFree;

  @NonNull
  public final ImageView imageFrontFree;

  @NonNull
  public final ImageView imageMainFree;

  @NonNull
  public final LinearLayout mainFree;

  @NonNull
  public final Button publishFree;

  private ActivityFreeBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout backFree,
      @NonNull EditText edtBookTitleFree, @NonNull EditText edtDescriptionFree,
      @NonNull Spinner edtLocationFree, @NonNull LinearLayout frontFree,
      @NonNull ImageView imageBackFree, @NonNull ImageView imageFrontFree,
      @NonNull ImageView imageMainFree, @NonNull LinearLayout mainFree,
      @NonNull Button publishFree) {
    this.rootView = rootView;
    this.backFree = backFree;
    this.edtBookTitleFree = edtBookTitleFree;
    this.edtDescriptionFree = edtDescriptionFree;
    this.edtLocationFree = edtLocationFree;
    this.frontFree = frontFree;
    this.imageBackFree = imageBackFree;
    this.imageFrontFree = imageFrontFree;
    this.imageMainFree = imageMainFree;
    this.mainFree = mainFree;
    this.publishFree = publishFree;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFreeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFreeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_free, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFreeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_free;
      LinearLayout backFree = ViewBindings.findChildViewById(rootView, id);
      if (backFree == null) {
        break missingId;
      }

      id = R.id.edt_book_title_free;
      EditText edtBookTitleFree = ViewBindings.findChildViewById(rootView, id);
      if (edtBookTitleFree == null) {
        break missingId;
      }

      id = R.id.edt_description_free;
      EditText edtDescriptionFree = ViewBindings.findChildViewById(rootView, id);
      if (edtDescriptionFree == null) {
        break missingId;
      }

      id = R.id.edt_location_free;
      Spinner edtLocationFree = ViewBindings.findChildViewById(rootView, id);
      if (edtLocationFree == null) {
        break missingId;
      }

      id = R.id.front_free;
      LinearLayout frontFree = ViewBindings.findChildViewById(rootView, id);
      if (frontFree == null) {
        break missingId;
      }

      id = R.id.image_back_free;
      ImageView imageBackFree = ViewBindings.findChildViewById(rootView, id);
      if (imageBackFree == null) {
        break missingId;
      }

      id = R.id.image_front_free;
      ImageView imageFrontFree = ViewBindings.findChildViewById(rootView, id);
      if (imageFrontFree == null) {
        break missingId;
      }

      id = R.id.image_main_free;
      ImageView imageMainFree = ViewBindings.findChildViewById(rootView, id);
      if (imageMainFree == null) {
        break missingId;
      }

      id = R.id.main_free;
      LinearLayout mainFree = ViewBindings.findChildViewById(rootView, id);
      if (mainFree == null) {
        break missingId;
      }

      id = R.id.publish_free;
      Button publishFree = ViewBindings.findChildViewById(rootView, id);
      if (publishFree == null) {
        break missingId;
      }

      return new ActivityFreeBinding((LinearLayout) rootView, backFree, edtBookTitleFree,
          edtDescriptionFree, edtLocationFree, frontFree, imageBackFree, imageFrontFree,
          imageMainFree, mainFree, publishFree);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
