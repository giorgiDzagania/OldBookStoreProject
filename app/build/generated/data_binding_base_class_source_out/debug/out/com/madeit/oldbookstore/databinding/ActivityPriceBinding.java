// Generated by view binder compiler. Do not edit!
package com.madeit.oldbookstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.madeit.oldbookstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPriceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout backPrice;

  @NonNull
  public final EditText bookTitle;

  @NonNull
  public final Button btPricePublish;

  @NonNull
  public final EditText description;

  @NonNull
  public final LinearLayout frontPrice;

  @NonNull
  public final ImageView imageBackPrice;

  @NonNull
  public final ImageView imageFrontPrice;

  @NonNull
  public final ImageView imageMainPrice;

  @NonNull
  public final LinearLayout mainPrice;

  @NonNull
  public final EditText price;

  @NonNull
  public final Spinner spinnerLocation;

  private ActivityPriceBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout backPrice,
      @NonNull EditText bookTitle, @NonNull Button btPricePublish, @NonNull EditText description,
      @NonNull LinearLayout frontPrice, @NonNull ImageView imageBackPrice,
      @NonNull ImageView imageFrontPrice, @NonNull ImageView imageMainPrice,
      @NonNull LinearLayout mainPrice, @NonNull EditText price, @NonNull Spinner spinnerLocation) {
    this.rootView = rootView;
    this.backPrice = backPrice;
    this.bookTitle = bookTitle;
    this.btPricePublish = btPricePublish;
    this.description = description;
    this.frontPrice = frontPrice;
    this.imageBackPrice = imageBackPrice;
    this.imageFrontPrice = imageFrontPrice;
    this.imageMainPrice = imageMainPrice;
    this.mainPrice = mainPrice;
    this.price = price;
    this.spinnerLocation = spinnerLocation;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPriceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPriceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_price, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPriceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_price;
      LinearLayout backPrice = ViewBindings.findChildViewById(rootView, id);
      if (backPrice == null) {
        break missingId;
      }

      id = R.id.book_title;
      EditText bookTitle = ViewBindings.findChildViewById(rootView, id);
      if (bookTitle == null) {
        break missingId;
      }

      id = R.id.bt_price_publish;
      Button btPricePublish = ViewBindings.findChildViewById(rootView, id);
      if (btPricePublish == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.front_price;
      LinearLayout frontPrice = ViewBindings.findChildViewById(rootView, id);
      if (frontPrice == null) {
        break missingId;
      }

      id = R.id.image_back_price;
      ImageView imageBackPrice = ViewBindings.findChildViewById(rootView, id);
      if (imageBackPrice == null) {
        break missingId;
      }

      id = R.id.image_front_price;
      ImageView imageFrontPrice = ViewBindings.findChildViewById(rootView, id);
      if (imageFrontPrice == null) {
        break missingId;
      }

      id = R.id.image_main_price;
      ImageView imageMainPrice = ViewBindings.findChildViewById(rootView, id);
      if (imageMainPrice == null) {
        break missingId;
      }

      id = R.id.main_price;
      LinearLayout mainPrice = ViewBindings.findChildViewById(rootView, id);
      if (mainPrice == null) {
        break missingId;
      }

      id = R.id.price;
      EditText price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.spinner_location;
      Spinner spinnerLocation = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLocation == null) {
        break missingId;
      }

      return new ActivityPriceBinding((LinearLayout) rootView, backPrice, bookTitle, btPricePublish,
          description, frontPrice, imageBackPrice, imageFrontPrice, imageMainPrice, mainPrice,
          price, spinnerLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
